{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/Input.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","Input","state","errorMassage","isError","handleBlur","e","name","target","formErrors","props","length","setState","handleFocus","this","value","handleInput","htmlFor","classNames","has_error","type","autoComplete","onChange","onBlur","onFocus","React","Component","regExp","NewMovie","titleInputError","descriptionInputError","imgUrlInputError","imdbUrlInputError","imdbIdInputError","formValid","onAdd","preventDefault","addMovie","clearForm","checkField","fieldName","valueStr","trim","test","validateForm","onSubmit","disabled","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8022d63f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nclass Input extends React.Component {\n  state={\n    errorMassage: '',\n    isError: false,\n  }\n\n  handleBlur = (e) => {\n    const { name } = e.target;\n    const { formErrors } = this.props;\n\n    if (!formErrors[name].length) {\n      return;\n    }\n\n    this.setState({\n      isError: true,\n      errorMassage: formErrors[name],\n    });\n  }\n\n  handleFocus = () => {\n    this.setState({\n      isError: false,\n      errorMassage: '',\n    });\n  }\n\n  render() {\n    const { value, name, handleInput } = this.props;\n    const { errorMassage, isError } = this.state;\n\n    return (\n      <div className=\"form-group\">\n        <label htmlFor={name}>{name}</label>\n        <input\n          className={classNames('form-control', { has_error: isError })}\n          type=\"text\"\n          name={name}\n          value={value}\n          autoComplete=\"off\"\n          onChange={handleInput}\n          onBlur={this.handleBlur}\n          onFocus={this.handleFocus}\n        />\n        <span className=\"formErrors\">{errorMassage}</span>\n      </div>\n    );\n  }\n}\n\nInput.propTypes = {\n  value: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  handleInput: PropTypes.func.isRequired,\n  formErrors: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nexport default Input;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Input from './Input';\nimport './NewMovie.scss';\n// eslint-disable-next-line\n const regExp = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    titleInputError: false,\n    descriptionInputError: false,\n    imgUrlInputError: false,\n    imdbUrlInputError: false,\n    imdbIdInputError: false,\n    formErrors: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    formValid: false,\n  };\n\n  onAdd = (e) => {\n    e.preventDefault();\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n    const { addMovie } = this.props;\n\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    addMovie(newMovie);\n    this.clearForm();\n  }\n\n  clearForm= () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      titleInputError: false,\n      descriptionInputError: false,\n      imgUrlInputError: false,\n      imdbUrlInputError: false,\n      imdbIdInputError: false,\n      formErrors: {\n        title: '', description: '', imgUrl: '', imdbUrl: '', imdbId: '',\n      },\n      formValid: false,\n    });\n  }\n\n  handleInput = (e) => {\n    const { name } = e.target;\n    const { value } = e.target;\n\n    this.setState(\n      { [name]: value },\n      () => {\n        this.checkField(name, value);\n      },\n    );\n  }\n\n  checkField(fieldName, valueStr) {\n    let { titleInputError, descriptionInputError } = this.state;\n    let { imgUrlInputError, imdbUrlInputError, imdbIdInputError } = this.state;\n    const { formErrors } = this.state;\n    const value = valueStr.trim();\n\n    switch (fieldName) {\n      case 'title':\n        titleInputError = value.length > 0 && value.length < 30;\n        formErrors.title = titleInputError\n          ? ''\n          : 'Title length is from 1 to 30 characters';\n        break;\n      case 'description':\n        descriptionInputError = value.length > 0;\n        formErrors.description = descriptionInputError\n          ? ''\n          : 'Enter movie description';\n        break;\n      case 'imgUrl':\n        imgUrlInputError = regExp.test(value);\n        formErrors.imgUrl = imgUrlInputError\n          ? ''\n          : 'Enter the correct link';\n        break;\n      case 'imdbUrl':\n        imdbUrlInputError = regExp.test(value);\n        formErrors.imdbUrl = imdbUrlInputError ? '' : 'Enter the correct link';\n        break;\n      case 'imdbId':\n        imdbIdInputError = value.length === 9;\n        formErrors.imdbId = imdbIdInputError\n          ? ''\n          : 'imdbId length is 9 characters';\n        break;\n      default:\n        break;\n    }\n\n    this.setState({\n      formErrors,\n      titleInputError,\n      descriptionInputError,\n      imgUrlInputError,\n      imdbUrlInputError,\n      imdbIdInputError,\n    }, this.validateForm);\n  }\n\n  validateForm() {\n    this.setState(state => ({\n      formValid: state.titleInputError\n      && state.descriptionInputError\n      && state.imgUrlInputError\n      && state.imdbUrlInputError\n      && state.imdbIdInputError,\n    }));\n  }\n\n  render() {\n    const { title, description, imgUrl } = this.state;\n    const { imdbUrl, imdbId, formValid, formErrors } = this.state;\n\n    return (\n      <>\n        <h1 className=\"\">New movie</h1>\n        <form\n          className=\"form\"\n          onSubmit={this.onAdd}\n        >\n          <Input\n            value={title}\n            formErrors={formErrors}\n            handleInput={this.handleInput}\n            name=\"title\"\n          />\n\n          <div className={`form-group\n          ${(this.state.formErrors.description.length === 0\n        ? ''\n        : 'has-error')}`\n          }\n          >\n            <label htmlFor=\"description\">Description</label>\n            <textarea\n              className=\"form-control\"\n              type=\"text\"\n              name=\"description\"\n              value={description}\n              autoComplete=\"off\"\n              onChange={this.handleInput}\n            />\n            {formErrors.description.length\n              ? <span className=\"formErrors\">{formErrors.description}</span>\n              : ''\n            }\n          </div>\n\n          <Input\n            value={imgUrl}\n            formErrors={formErrors}\n            handleInput={this.handleInput}\n            name=\"imgUrl\"\n          />\n          <Input\n            value={imdbUrl}\n            formErrors={formErrors}\n            handleInput={this.handleInput}\n            name=\"imdbUrl\"\n          />\n          <Input\n            value={imdbId}\n            formErrors={formErrors}\n            handleInput={this.handleInput}\n            name=\"imdbId\"\n          />\n\n          <button\n            className=\"btn btn-primary\"\n            type=\"submit\"\n            disabled={!formValid}\n          >\n            Add\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}